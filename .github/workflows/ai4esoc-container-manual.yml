name: Deploy a gitrun container to ai4eosc platform

env:
  VO: "vo.ai4eosc.eu"

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy-runner:
    runs-on: ubuntu-latest
    name: Deploy a gitrun container to ai4eosc platform
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Generate a JIT configuration file for a self-hosted runner
        id: gen-jitconfig
        run: |
          JITCONFIG=$(curl -L --request POST \
            --url https://api.github.com/repos/OWNER/REPO/actions/runners/generate-jitconfig \
            --header 'Accept: application/vnd.github+json' \
            --header 'Authorization: Bearer ${{ secrets.APITOKEN }}' \
            --header 'X-GitHub-Api-Version: 2022-11-28' \
            --data '{
                "name": "New ai4eosc runner",
                "runner_group_id": 1,
                "labels": ["self-hosted","ai4eosc"],
                "work_folder": "_work"
              }'| jq -r .encoded_jit_config)
          echo "jitconfig=$JITCONFIG" >> $GITHUB_OUTPUT

      - name: Get oidc token from secret mytoken
        id: get-access-token
        uses: BorjaEst/mytoken-action@1.0.0
        with:
          my-token: ${{ secrets.MYTOKEN }}

      - name: Start runner in ai4eosc platform
        id: start-runner
        uses: ./.github/actions/ai4eosc-start-runner
        with:
          at: ${{ steps.get-access-token.outputs.access-token }}
          vo: ${{ env.VO }}
          config: ${{ steps.gen-jitconfig.outputs.jitconfig }}

      - name: Print container public access url
        run: echo "https://api-$RUNNER_ID.deployments.cloud.ai4eosc.eu"
        env:
          RUNNER_ID: ${{ steps.start-runner.outputs.container-id }}

  wait-for-runner:
    runs-on: ubuntu-latest
    needs: deploy-runner
    name: Wait for the runner to be ready
    steps:
      - name: Delay for the runner to be ready
        run: sleep 10

  run-on-runner:
    runs-on: [self-hosted, ai4eosc]
    steps:
      - run: echo Hello world!
